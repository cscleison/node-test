name: Hotfix CI
on:
  push:
    branches:
      - hotfix*

jobs:
  hotfix-ci:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 5

      - name: Find the latest tag in the same branch
        id: latest-tag
        run: |
          git fetch --tags
          LATEST_MAIN_TAG=$(git describe --tags --abbrev=0)
          echo "::set-output name=result::$LATEST_MAIN_TAG"

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.latest-tag.outputs.result }}
          level: patch

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}/u6u0a7r2/node-test
          RELEASE_TAG: ${{ steps.bump-semver.outputs.new_version }}-hotfix
          PROD_IMAGE_TAG: prod-${{ steps.bump-semver.outputs.new_version }}-hotfix

        # tags a hotfix image as 'x.y.z-hotfix' and 'prod-x.y.z-hotfix'
        run: |
          docker build -t $ECR_REGISTRY:$RELEASE_TAG -t $ECR_REGISTRY:$PROD_IMAGE_TAG .
          docker push $ECR_REGISTRY --all-tags

      - name: Tag the current commit in git
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.bump-semver.outputs.new_version }}-hotfix",
              sha: context.sha
            })
